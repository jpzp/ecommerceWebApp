{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/ecommerce/ecommerce.component.ts","webpack:///src/app/ecommerce/ecommerce.component.html","webpack:///src/app/ecommerce/models/product-order.model.ts","webpack:///src/app/ecommerce/models/product-orders.model.ts","webpack:///src/app/ecommerce/orders/orders.component.ts","webpack:///src/app/ecommerce/orders/orders.component.html","webpack:///src/app/ecommerce/products/products.component.ts","webpack:///src/app/ecommerce/products/products.component.html","webpack:///src/app/ecommerce/services/EcommerceService.ts","webpack:///src/app/ecommerce/shopping-carts/shopping-carts.component.ts","webpack:///src/app/ecommerce/shopping-carts/shopping-carts.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","EcommerceComponent","collapsed","orderFinished","productsC","reset","shoppingCartC","ordersC","paid","toggleCollapsed","finishOrder","ProductOrder","product","quantity","ProductOrders","productOrders","OrdersComponent","ecommerceService","orders","sub","OrdersChanged","subscribe","loadTotal","saveOrder","TotalChanged","total","Total","ProductsComponent","products","productSelected","loadProducts","loadOrders","getAllProducts","forEach","push","error","console","log","shoppingCartOrders","order","SelectedProductOrder","selectedProductOrder","productOrder","index","getProductIndex","splice","findIndex","value","EcommerceService","http","productsUrl","ordersUrl","productOrderSubject","ordersSubject","totalSubject","ProductOrderChanged","asObservable","get","post","next","ShoppingCartComponent","onOrderFinished","loadCart","sum","price","calculateTotal","unsubscribe","emit","environment","production","bootstrapModule","catch","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<div class=\"container\">\n    <app-ecommerce></app-ecommerce>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { EcommerceComponent } from './ecommerce/ecommerce.component';\nimport { ProductsComponent } from './ecommerce/products/products.component';\nimport { OrdersComponent } from './ecommerce/orders/orders.component';\nimport { ShoppingCartComponent } from './ecommerce/shopping-carts/shopping-carts.component';\nimport {EcommerceService} from \"./ecommerce/services/EcommerceService\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EcommerceComponent,\n    ProductsComponent,\n    OrdersComponent,  \n    ShoppingCartComponent\n  ],\n  imports: [\n\tBrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [EcommerceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ProductsComponent} from \"./products/products.component\";\nimport {ShoppingCartComponent} from \"./shopping-carts/shopping-carts.component\";\nimport {OrdersComponent} from \"./orders/orders.component\";\n\n@Component({\n    selector: 'app-ecommerce',\n    templateUrl: './ecommerce.component.html',\n    styleUrls: ['./ecommerce.component.css']\n})\nexport class EcommerceComponent implements OnInit {\n    public collapsed = true;\n    orderFinished = false;\n \n    @ViewChild('productsC')\n    productsC: ProductsComponent;\n\n    @ViewChild('shoppingCartC')\n    shoppingCartC: ShoppingCartComponent;\n\n    @ViewChild('ordersC')\n    ordersC: OrdersComponent;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    toggleCollapsed(): void {\n        this.collapsed = !this.collapsed;\n    }\n\n    finishOrder(orderFinished: boolean) {\n        this.orderFinished = orderFinished;\n    }\n\n    reset() {\n        this.orderFinished = false;\n        this.productsC.reset();\n        this.shoppingCartC.reset();\n        this.ordersC.paid = false;\n    }\n}","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n    <div class=\"container\">\n        <a class=\"navbar-brand\" href=\"#\">JPZP E-commerce</a>\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\"\n                aria-expanded=\"false\" aria-label=\"Toggle navigation\" (click)=\"toggleCollapsed()\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div id=\"navbarResponsive\" [ngClass]=\"{'collapse': collapsed, 'navbar-collapse': true}\">\n            <ul class=\"navbar-nav ml-auto\">\n                <li class=\"nav-item active\">\n                    <a class=\"nav-link\" href=\"#\" (click)=\"reset()\">Home\n                        <span class=\"sr-only\">(current)</span>\n                    </a>\n                </li>\n            </ul>\n        </div>\n    </div>\n</nav>\n<div class=\"row\">\n    <div class=\"col-md-9\">\n        <app-products #productsC [hidden]=\"orderFinished\"></app-products>\n    </div>\n    <div class=\"col-md-3\">\n        <app-shopping-carts (onOrderFinished)=finishOrder($event) #shoppingCartC\n                           [hidden]=\"orderFinished\"></app-shopping-carts>\n    </div>\n    <div class=\"col-md-6 offset-3\">\n        <app-orders #ordersC [hidden]=\"!orderFinished\"></app-orders>\n    </div>\n</div>","import {Product} from \"./product.model\";\r\nexport class ProductOrder {\r\n    product: Product;\r\n    quantity: number;\r\n \r\n    // all arguments constructor\r\n\tconstructor(product: Product, quantity: number){\r\n\t\tthis.product = product;\r\n\t\tthis.quantity = quantity;\r\n\t}\r\n}","import {ProductOrder} from \"./product-order.model\";\r\n\r\nexport class ProductOrders {\r\n    productOrders: ProductOrder[] = [];\r\n}","import {Component, OnInit} from '@angular/core';\nimport {ProductOrders} from \"../models/product-orders.model\";\nimport {Subscription} from \"rxjs/internal/Subscription\";\nimport {EcommerceService} from \"../services/EcommerceService\";\n\n@Component({\n    selector: 'app-orders',\n    templateUrl: './orders.component.html',\n    styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n    orders: ProductOrders;\n    total: number;\n    paid: boolean;\n    sub: Subscription;\n\n    constructor(private ecommerceService: EcommerceService) {\n        this.orders = this.ecommerceService.ProductOrders;\n    }\n\n    ngOnInit() {\n        this.paid = false;\n        this.sub = this.ecommerceService.OrdersChanged.subscribe(() => {\n            this.orders = this.ecommerceService.ProductOrders;\n        });\n        this.loadTotal();\n    }\n\n    pay() {\n        this.paid = true;\n        this.ecommerceService.saveOrder(this.orders).subscribe();\n    }\n\n    loadTotal() {\n        this.sub = this.ecommerceService.TotalChanged.subscribe(() => {\n            this.total = this.ecommerceService.Total;\n        });\n    }\n}","<h2 class=\"text-center\">ORDER</h2>\n<ul>\n    <li *ngFor=\"let order of orders.productOrders\">\n        {{ order.product.name }} - ${{ order.product.price }} x {{ order.quantity}} pcs.\n    </li>\n</ul>\n<h3 class=\"text-right\">Total amount: ${{ total }}</h3>\n \n<button class=\"btn btn-primary btn-block\" (click)=\"pay()\" *ngIf=\"!paid\">Pay</button>\n<div class=\"alert alert-success\" role=\"alert\" *ngIf=\"paid\">\n    <strong>Congratulation!</strong> You successfully made the order.\n</div>","import {Component, OnInit} from '@angular/core';\nimport {ProductOrder} from \"../models/product-order.model\";\nimport {EcommerceService} from \"../services/EcommerceService\";\nimport {Subscription} from \"rxjs/internal/Subscription\";\nimport {ProductOrders} from \"../models/product-orders.model\";\nimport {Product} from \"../models/product.model\";\n\n@Component({\n    selector: 'app-products',\n    templateUrl: './products.component.html',\n    styleUrls: ['./products.component.css']\n})\n\nexport class ProductsComponent implements OnInit {\n    productOrders: ProductOrder[] = [];\n    products: Product[] = [];\n    selectedProductOrder: ProductOrder;\n    private shoppingCartOrders: ProductOrders;\n    sub: Subscription;\n    productSelected: boolean = false;\n\n    constructor(private ecommerceService: EcommerceService) {\n    }\n\n    ngOnInit() {\n        this.productOrders = [];\n        this.loadProducts();\n        this.loadOrders();\n    }\n\t\n    loadProducts() {\n        this.ecommerceService.getAllProducts()\n            .subscribe(\n                (products: any[]) => {\n                    this.products = products;\n                    this.products.forEach(product => {\n                        this.productOrders.push(new ProductOrder(product, 0));\n                    })\n                },\n                (error) => console.log(error)\n            );\n    }\n\t\n\tloadOrders() {\n        this.sub = this.ecommerceService.OrdersChanged.subscribe(() => {\n            this.shoppingCartOrders = this.ecommerceService.ProductOrders;\n        });\n    }\n\t\n    addToCart(order: ProductOrder) {\n        this.ecommerceService.SelectedProductOrder = order;\n        this.selectedProductOrder = this.ecommerceService.SelectedProductOrder;\n        this.productSelected = true;\n    }\n\n    removeFromCart(productOrder: ProductOrder) {\n        let index = this.getProductIndex(productOrder.product);\n        if (index > -1) {\n            this.shoppingCartOrders.productOrders.splice(\n                this.getProductIndex(productOrder.product), 1);\n        }\n        this.ecommerceService.ProductOrders = this.shoppingCartOrders;\n        this.shoppingCartOrders = this.ecommerceService.ProductOrders;\n        this.productSelected = false;\n    }\n\n    getProductIndex(product: Product): number {\n        return this.ecommerceService.ProductOrders.productOrders.findIndex(\n            value => value.product === product);\n    }\n\n    isProductSelected(product: Product): boolean {\n        return this.getProductIndex(product) > -1;\n    }\n\n    reset() {\n        this.productOrders = [];\n        this.loadProducts();\n        this.ecommerceService.ProductOrders.productOrders = [];\n        this.loadOrders();\n        this.productSelected = false;\n    }\n}","<div class=\"row card-deck\">\n    <div class=\"col-lg-4 col-md-6 mb-4\" *ngFor=\"let order of productOrders\">\n        <div class=\"card text-center\">\n            <div class=\"card-header\">\n                <h4>{{order.product.name}}</h4>\n            </div>\n            <div class=\"card-body\">\n                <a href=\"#\"><img class=\"card-img-top\" src={{order.product.pictureUrl}} alt=\"\"></a>\n                <h5 class=\"card-title\">${{order.product.price}}</h5>\n                <div class=\"row\">\n                    <div class=\"col-4 padding-0\" *ngIf=\"!isProductSelected(order.product)\">\n                        <input type=\"number\" min=\"0\" class=\"form-control\" [(ngModel)]=order.quantity>\n                    </div>\n                    <div class=\"col-4 padding-0\" *ngIf=\"!isProductSelected(order.product)\">\n                        <button class=\"btn btn-primary\" (click)=\"addToCart(order)\"\n                                [disabled]=\"order.quantity <= 0\">Add To Cart\n                        </button>\n                    </div>\n                    <div class=\"col-12\" *ngIf=\"isProductSelected(order.product)\">\n                        <button class=\"btn btn-primary btn-block\"\n                                (click)=\"removeFromCart(order)\">Remove From Cart\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import {ProductOrder} from \"../models/product-order.model\";\r\nimport {Subject} from \"rxjs/internal/Subject\";\r\nimport {ProductOrders} from \"../models/product-orders.model\";\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Injectable} from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class EcommerceService {\r\n    private productsUrl = \"/api/products\";\r\n    private ordersUrl = \"/api/orders\";\r\n\r\n    private productOrder: ProductOrder;\r\n    private orders: ProductOrders = new ProductOrders();\r\n\r\n    private productOrderSubject = new Subject();\r\n    private ordersSubject = new Subject();\r\n    private totalSubject = new Subject();\r\n\r\n    private total: number;\r\n\r\n    ProductOrderChanged = this.productOrderSubject.asObservable();\r\n    OrdersChanged = this.ordersSubject.asObservable();\r\n    TotalChanged = this.totalSubject.asObservable();\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getAllProducts() {\r\n        return this.http.get(this.productsUrl);\r\n    }\r\n\r\n    saveOrder(order: ProductOrders) {\r\n        return this.http.post(this.ordersUrl, order);\r\n    }\r\n\r\n    set SelectedProductOrder(value: ProductOrder) {\r\n        this.productOrder = value;\r\n        this.productOrderSubject.next();\r\n    }\r\n\r\n    get SelectedProductOrder() {\r\n        return this.productOrder;\r\n    }\r\n\r\n    set ProductOrders(value: ProductOrders) {\r\n        this.orders = value;\r\n        this.ordersSubject.next();\r\n    }\r\n\r\n    get ProductOrders() {\r\n        return this.orders;\r\n    }\r\n\r\n    get Total() {\r\n        return this.total;\r\n    }\r\n\r\n    set Total(value: number) {\r\n        this.total = value;\r\n        this.totalSubject.next();\r\n    }\r\n}","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {ProductOrders} from \"../models/product-orders.model\";\nimport {ProductOrder} from \"../models/product-order.model\";\nimport {EcommerceService} from \"../services/EcommerceService\";\nimport {Subscription} from \"rxjs/internal/Subscription\";\n\n@Component({\n  selector: 'app-shopping-carts',\n  templateUrl: './shopping-carts.component.html',\n  styleUrls: ['./shopping-carts.component.css']\n})\nexport class ShoppingCartComponent implements OnInit, OnDestroy {\n    orderFinished: boolean;\n    orders: ProductOrders;\n    total: number;\n    sub: Subscription;\n \n    @Output() onOrderFinished: EventEmitter<boolean>;\n \n    constructor(private ecommerceService: EcommerceService) {\n        this.total = 0;\n        this.orderFinished = false;\n        this.onOrderFinished = new EventEmitter<boolean>();\n    }\n \n    ngOnInit() {\n        this.orders = new ProductOrders();\n        this.loadCart();\n        this.loadTotal();\n    }\n\t\n\tprivate calculateTotal(products: ProductOrder[]): number {\n        let sum = 0;\n        products.forEach(value => {\n            sum += (value.product.price * value.quantity);\n        });\n        return sum;\n    }\n \n    loadTotal() {\n        this.sub = this.ecommerceService.OrdersChanged.subscribe(() => {\n            this.total = this.calculateTotal(this.orders.productOrders);\n        });\n    }\n \n    loadCart() {\n        this.sub = this.ecommerceService.ProductOrderChanged.subscribe(() => {\n            let productOrder = this.ecommerceService.SelectedProductOrder;\n            if (productOrder) {\n                this.orders.productOrders.push(new ProductOrder(\n                    productOrder.product, productOrder.quantity));\n            }\n            this.ecommerceService.ProductOrders = this.orders;\n            this.orders = this.ecommerceService.ProductOrders;\n            this.total = this.calculateTotal(this.orders.productOrders);\n        });\n    }\n \n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\t\n\tfinishOrder() {\n\t\tthis.orderFinished = true;\n\t\tthis.ecommerceService.Total = this.total;\n\t\tthis.onOrderFinished.emit(this.orderFinished);\n\t}\n \n\treset() {\n\t\tthis.orderFinished = false;\n\t\tthis.orders = new ProductOrders();\n\t\tthis.orders.productOrders = []\n\t\tthis.loadTotal();\n\t\tthis.total = 0;\n\t}\n}","<div class=\"card text-white bg-danger mb-3\" style=\"max-width: 18rem;\">\n    <div class=\"card-header text-center\">Shopping Cart</div>\n    <div class=\"card-body\">\n        <h5 class=\"card-title\">Total: ${{total}}</h5>\n        <hr>\n        <h6 class=\"card-title\">Items bought:</h6>\n \n        <ul>\n            <li *ngFor=\"let order of orders.productOrders\">\n                {{ order.product.name }} - {{ order.quantity}} pcs.\n            </li>\n        </ul>\n \n        <button class=\"btn btn-light btn-block\" (click)=\"finishOrder()\"\n             [disabled]=\"orders.productOrders.length == 0\">Checkout\n        </button>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}